~ Eiger Standard Math Library

namespace math { ~ Declare a namespace
	~ Mathematical Constants
	let readonly pi = 3.14159265358979323846
	let readonly e = 2.718281828459045

	~ get the unsigned value of a number
	func abs(n) {
		if n < 0
			ret -n
		else
			ret n
	}

	~ get the square root of a number
	func sqrt(n) > n ^ 0.5

	~ get exponentiation of two functions
	func pow(b, e) > b ^ e

	~ get remainder of two numbers
	func mod(a, b) > a % b

	~ get factorial of a number using recursion
	func factorial(n) {
		if n ?= 0
			ret 1
		else
			ret n * factorial(n - 1)
	}

	func sin(x) {
	    let readonly epsilon = 0.000001
	    let term = x
	    let sum = 0
	    let n = 1

	    while x > pi x -= 2 * pi
	    while x < -pi x += 2 * pi

	    while abs(term) >= epsilon {
	    	sum += term
	    	n += 2
	    	term = -term * x * x / (n * (n - 1))
	    }

	    ret sum
	}


	func cos(n) > sin(pi / 2 - n)
}